import jetson.inference
import jetson.utils

# 加载对象检测模型
net = jetson.inference.detectNet("ssd-mobilenet-v2", threshold=0.5)

# 加载输入图片
img = jetson.utils.loadImage("path/to/your/image.jpg")  # 替换为你的图片路径

if img is not None:
    # 输出图像参数
    width, height = img.GetWidth(), img.GetHeight()
    channels = img.NumChannels()
    print("Width: {}, Height: {}, Channels: {}".format(width, height, channels))

    # 进行对象检测
    detections = net.Detect(img)

    # 输出检测结果
    print("Detections: ", len(detections))  # 输出检测到的对象数量
    for detection in detections:
        print("Class ID: {}, Confidence: {:.2f}, Bounding Box: ({}, {}, {}, {})".format(
            detection.ClassID, detection.Confidence,
            detection.Left, detection.Top, detection.Right, detection.Bottom
        ))

    for detection in detections:
        class_id = detection.ClassID
        confidence = detection.Confidence
        left = detection.Left
        top = detection.Top
        right = detection.Right
        bottom = detection.Bottom
        
        # 计算宽度、高度、面积和中心点
        width = right - left
        height = bottom - top
        area = width * height
        center_x = (left + right) / 2
        center_y = (top + bottom) / 2

        # 打印识别参数
        print(f"ClassID: {class_id}, Confidence: {confidence:.2f}, "
              f"Left: {left}, Top: {top}, Right: {right}, Bottom: {bottom}, "
              f"Width: {width}, Height: {height}, Area: {area}, "
              f"Center: ({center_x}, {center_y})")

    # 可视化结果
    display = jetson.utils.videoOutput("display://0")
    display.Render(img)
    display.SetStatus("Object Detection | Network {:.0f} FPS".format(net.GetNetworkFPS()))
else:
    print("无法加载图像")
